{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","React","createElement","className","concat","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","NavLink","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","_useState","useState","_useState2","_slicedToArray","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Link","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","_useAuth","setToken","_useState3","_useState4","tokenExpirationDate","setTokenExpirationDate","_useState5","_useState6","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","Switch","Route","path","Redirect","Provider","value","Router","Suspense","fallback","render"],"mappings":"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","file":"static/js/main.cb0b4951.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n   isLoggedIn: false,\n   userId: null,\n   token: null,\n   login: () => {},\n   logout: () => {},\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n   const [token, setToken] = useState(false);\r\n   const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n   const [userId, setUserId] = useState(false);\r\n\r\n   const login = useCallback((uid, token, expirationDate) => {\r\n      setToken(token);\r\n      setUserId(uid);\r\n      const tokenExpirationDate =\r\n         expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n      setTokenExpirationDate(tokenExpirationDate);\r\n      localStorage.setItem(\r\n         \"userData\",\r\n         JSON.stringify({\r\n            userId: uid,\r\n            token: token,\r\n            expiration: tokenExpirationDate.toISOString(),\r\n         })\r\n      );\r\n   }, []);\r\n\r\n   const logout = useCallback(() => {\r\n      setToken(null);\r\n      setTokenExpirationDate(null);\r\n      setUserId(null);\r\n      localStorage.removeItem(\"userData\");\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      if (token && tokenExpirationDate) {\r\n         const remainingTime =\r\n            tokenExpirationDate.getTime() - new Date().getTime();\r\n         logoutTimer = setTimeout(logout, remainingTime);\r\n      } else {\r\n         clearTimeout(logoutTimer);\r\n      }\r\n   }, [token, logout, tokenExpirationDate]);\r\n\r\n   useEffect(() => {\r\n      const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      if (\r\n         storedData &&\r\n         storedData.token &&\r\n         new Date(storedData.expiration) > new Date()\r\n      ) {\r\n         login(\r\n            storedData.userId,\r\n            storedData.token,\r\n            new Date(storedData.expiration)\r\n         );\r\n      }\r\n   }, [login]);\r\n\r\n   return { token, login, logout, userId };\r\n};\r\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\nimport {\n   BrowserRouter as Router,\n   Route,\n   Redirect,\n   Switch,\n} from \"react-router-dom\";\n\n// import Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n   const { token, login, logout, userId } = useAuth();\n\n   let routes;\n\n   if (token) {\n      routes = (\n         <Switch>\n            <Route path=\"/\" exact>\n               <Users />\n            </Route>\n            <Route path=\"/:userId/places\" exact>\n               <UserPlaces />\n            </Route>\n            <Route path=\"/places/new\" exact>\n               <NewPlace />\n            </Route>\n            <Route path=\"/places/:placeId\">\n               <UpdatePlace />\n            </Route>\n            <Redirect to=\"/\" />\n         </Switch>\n      );\n   } else {\n      routes = (\n         <Switch>\n            <Route path=\"/\" exact>\n               <Users />\n            </Route>\n            <Route path=\"/:userId/places\" exact>\n               <UserPlaces />\n            </Route>\n            <Route path=\"/auth\">\n               <Auth />\n            </Route>\n            <Redirect to=\"/auth\" />\n         </Switch>\n      );\n   }\n\n   return (\n      <AuthContext.Provider\n         value={{\n            isLoggedIn: !!token,\n            token: token,\n            userId: userId,\n            login: login,\n            logout: logout,\n         }}\n      >\n         <Router>\n            <MainNavigation />\n            <main>\n               <Suspense\n                  fallback={\n                     <div className=\"center\">\n                        <LoadingSpinner />\n                     </div>\n                  }\n               >\n                  {\" \"}\n                  {routes}\n               </Suspense>\n            </main>\n         </Router>\n      </AuthContext.Provider>\n   );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}